{
  "$schema": "https://raw.githubusercontent.com/unjs/docs/main/schema/config.json",
  "name": "Nitro",
  "description": "Create web servers that run anywhere.",
  "shortDescription": "Create web servers that run anywhere.",
  "github": "unjs/nitro",
  "themeColor": "#FB848E",
  "redirects": {
    "/deploy/node": { "redirect": "/deploy/runtimes/node" }
  },
  "landing": {
    "heroCode": "npx giget@latest nitro\ncd nitro-app\nnpm install\nnpm run dev",
    "heroLinks": {},
    "features": [
      { "icon": "🐇", "title": "Rapid Development", "description": "Zero config setup with hot module replacement for server code in development." },
      { "icon": "😌", "title": "Deploy Anywhere", "description": "Deploy the same codebase to any [deployment provider](/deploy) with no extra config." },
      { "icon": "💼", "title": "Portable and Compact", "description": "Say goodbye to `node_modules`, output size is less than 1MB." },
      { "icon": "📁", "title": "Filesystem Routing", "description": "[Automatically registers](/guide/routing) server and API routes." },
      { "icon": "🤏", "title": "Minimal Design", "description": "Minimal design to fit into any solution with minimum overhead" },
      { "icon": "🚀", "title": "Code-Splitting", "description": "Async chunk loading for fast server startup time and answer." },
      { "icon": "👕", "title": "TypeScript", "description": "TypeScript support out of the box with few more goodies." },
      { "icon": "💾", "title": "Storage Layer", "description": "Multi driver and platform-agnostic storage system." },
      { "icon": "💰", "title": "Cache API", "description": "Powerful built-in caching API." },
      { "icon": "🐱", "title": "Hackable", "description": "Built to be customized with the [plugins](/guide/plugins) hooks system." },
      { "icon": "✨", "title": "Auto Imports", "description": "Automatically import utilities for a minimal and clean codebase. Only the used ones will be added to the final bundle." },
      { "icon": "🏛️", "title": "Backward Compatible", "description": "So you can use legacy npm packages, CommonJS and mocking Node.js modules for workers." }
    ]
  }
}
